{"version":3,"sources":["webpack://SFCodeEditor/webpack/universalModuleDefinition","webpack://SFCodeEditor/webpack/bootstrap","webpack://SFCodeEditor/external {\"root\":\"SFToolkit\",\"commonjs\":\"@spiral-toolkit/core\",\"amd\":\"@spiral-toolkit/core\",\"commonjs2\":\"@spiral-toolkit/core\"}","webpack://SFCodeEditor/./src/CodeEditor.ts","webpack://SFCodeEditor/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ssf","node","options","CodeEditor","defaultOptions","spiralFrameworkName","optionsToGrab","domAttr","init","textarea","querySelector","id","getAttribute","Date","now","Math","floor","random","setAttribute","CodeMirror","Error","CodeEditorOptions","setExternalValue","sfSetValue","normalizeValue","fromTextArea","off","on","denormalizeValue","getValue","newVal","this","formatJson","obj","JSON","parse","stringify","undefined","e","setValue","die","toTextArea","spiralFrameworkCssName","lineNumbers","gutters","lint","core","BaseDOMConstructor","registerInstanceType","version"],"mappings":"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","file":"codeeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@spiral-toolkit/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@spiral-toolkit/codeeditor\", [\"@spiral-toolkit/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@spiral-toolkit/codeeditor\"] = factory(require(\"@spiral-toolkit/core\"));\n\telse\n\t\troot[\"SFCodeEditor\"] = factory(root[\"SFToolkit\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import sf, { ICustomInput, IOptionToGrab, ISpiralFramework } from '@spiral-toolkit/core';\nimport { ICodeEditorOptions } from './types';\n\nexport class CodeEditor extends sf.core.BaseDOMConstructor {\n  static readonly spiralFrameworkName: string = 'CodeEditor';\n\n  static readonly spiralFrameworkCssName: string = 'js-sf-codeeditor';\n\n  static readonly defaultOptions: ICodeEditorOptions = {\n    value: '',\n    name: '',\n    formatJson: true,\n    options: {\n      mode: \"application/json\",\n      lineNumbers: true,\n      gutters: [\"CodeMirror-lint-markers\"],\n      lint: true,\n    },\n  };\n\n  public options: ICodeEditorOptions = { ...CodeEditor.defaultOptions };\n\n  public readonly name = CodeEditor.spiralFrameworkName;\n\n  public textarea!: HTMLTextAreaElement;\n\n  public readonly optionsToGrab: { [option: string]: IOptionToGrab } = {\n    name: {\n      value: CodeEditor.defaultOptions.name,\n      domAttr: 'data-name',\n    },\n  };\n\n  private CodeEditor: any;\n\n  constructor(ssf: ISpiralFramework, node: Element, options: ICodeEditorOptions) {\n    super();\n    this.init(ssf, node, options);\n    this.options = {\n      ...CodeEditor.defaultOptions,\n      ...this.options,\n    };\n    this.textarea = node.querySelector('textarea') as HTMLTextAreaElement;\n    let id = this.textarea.getAttribute('id');\n    if (!id) {\n      id = `sf-${Date.now()}${Math.floor(Math.random() * 1000)}`;\n      this.textarea.setAttribute('id', id);\n    }\n    const { CodeMirror } = (window as any);\n    if (!CodeMirror) {\n      throw new Error('Please include CodeMirror to head scripts');\n    }\n    const CodeEditorOptions = { ...this.options.options };\n    this.setExternalValue = this.setExternalValue.bind(this);\n    (this.textarea as unknown as ICustomInput).sfSetValue = this.setExternalValue;\n    this.textarea.value = this.normalizeValue(this.textarea.value);\n    this.CodeEditor = CodeMirror.fromTextArea(this.textarea, CodeEditorOptions);\n    this.CodeEditor.off('change');\n    this.CodeEditor.on('change', () => {\n      this.textarea.value = this.denormalizeValue(this.CodeEditor.getValue());\n    });\n  }\n\n  normalizeValue(value: string) {\n    let newVal = value;\n    if(this.options.formatJson) {\n      try {\n        const obj = JSON.parse(value);\n        newVal = JSON.stringify(obj, undefined, 2);\n      } catch (e) {\n\n      }\n    }\n    return newVal;\n  }\n\n  denormalizeValue(value: string) {\n    let newVal = value;\n    if(this.options.formatJson) {\n      try {\n        const obj =  JSON.parse(value);\n        newVal = JSON.stringify(obj);\n      } catch (e) {\n\n      }\n    }\n    return newVal;\n  }\n\n  setExternalValue(value: string) {\n    this.CodeEditor.setValue(this.normalizeValue(value));\n  }\n\n  die() {\n    super.die();\n    this.CodeEditor.toTextArea();\n  }\n}\n","import sf from '@spiral-toolkit/core';\nimport { CodeEditor } from './CodeEditor';\n\nsf.registerInstanceType(CodeEditor, CodeEditor.spiralFrameworkCssName);\n\n// Includes version and time in bundle\nexport const version = `Version ${process.env.VERSION}, built at ${process.env.BUILD_TIME}`\n\nexport default CodeEditor; // ES6 default export will not expose us as global\n"],"sourceRoot":""}